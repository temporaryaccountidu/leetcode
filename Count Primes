class Solution {
public:
    int countPrimes(int n) {
         if (n <= 2) {
        return 0;
    }
    
    
    int sqrtN = sqrt(n);
    vector<bool> isPrime(sqrtN + 1, true);
    isPrime[0] = isPrime[1] = false; 
    
    for (int i = 2; i * i <= sqrtN; ++i) {
        if (isPrime[i]) {
            for (int j = i * i; j <= sqrtN; j += i) {
                isPrime[j] = false;
            }
        }
    }
    
    vector<bool> primes(n, true);
    primes[0] = primes[1] = false; 
    
    for (int i = 2; i <= sqrtN; ++i) {
        if (isPrime[i]) {
            for (int j = i * i; j < n; j += i) {
                primes[j] = false;
            }
        }
    }
    
    int count = 0;
    for (int i = 2; i < n; ++i) {
        if (primes[i]) {
            count++;
        }
    }
    
    return count;
    }
};
